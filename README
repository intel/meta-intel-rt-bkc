License
============

All metadata files (including, but not limited to bb, bbappend,
bbclass, inc and conf files) are GPLv2 licensed unless otherwise stated.
Source code included in tree for individual recipes is under the
LICENSE stated in the associated recipe (.bb file) unless otherwise
stated.


Introduction
============

This meta layer is used to release ikt rt kernel config and kernel cmdline
parameters. RT kernel config and cmdline parameters are in:
recipes-kernel/linux/files/RT.cfg

meta-intel-ikt-rt
===================

This README file contains information on building and booting
meta-intel-ikt-rt BSP layers. Please see the corresponding
sections below for details.


Yocto Project Compatible
========================

The BSPs contained in this layer are compatible with the Yocto Project
as per the requirements listed here:

  https://www.yoctoproject.org/webform/yocto-project-compatible-registration


Dependencies
============

This layer depends on:
  URI: git://git.openembedded.org/openembedded-core
  layers: meta
  branch: dunfell

  URI: git://git.yoctoproject.org/meta-intel
  layers: intel
  branch: dunfell

How to build Yocto image with intel iotg rt kernel
==================================================

1. git clone -b dunfell git://git.yoctoproject.org/poky.git yocto_project
2. cd yocto_project
3. git clone -b dunfell git://git.yoctoproject.org/meta-intel
4. git clone -b dunfell git://git.openembedded.org/meta-openembedded
5. git clone -b 5.4/yocto https://github.com/intel/meta-intel-rt-bkc.git meta-intel-ikt-rt
6. source ./oe-init-build-env
7. (In yocto_project/build folder) bitbake-layers add-layer ../meta-intel
8. bitbake-layers add-layer ../meta-openembedded/meta-oe/
9. bitbake-layers add-layer ../meta-intel-ikt-rt
10. echo "MACHINE = \"intel-corei7-64\"" >> conf/auto.conf
11. (optional) echo "K_TAG = "<tag to be built>" >> conf/local.conf (example: echo "K_TAG = \"lts-v5.4.70-rt40-preempt-rt-201026T005400Z\"" >> conf/local.conf)
12. bitbake core-image-sato (or core-image-minimal)
